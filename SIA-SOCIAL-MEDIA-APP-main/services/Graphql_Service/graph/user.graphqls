# graph/user.graphqls

type Account {
  accountId: ID!
  email: String!
  firstName: String!
  lastName: String!
  address: String
  phone: String
  age: Int!
  gender: String
  isFollowing: Boolean
  createdAt: String!
  updatedAt: String
}

input RegisterInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  address: String
  phone: String
  age: Int!
  gender: String
}

extend type Mutation {
  register(input: RegisterInput!): Account!

  "Allows the logged-in user to follow another user."
  followUser(userIdToFollow: ID!): Account! # Returns the account being followed

  "Allows the logged-in user to unfollow another user."
  unfollowUser(userIdToUnfollow: ID!): Account! # Returns the account being unfollowed
}

extend type Query {
  getAccount(accountId: ID!): Account!
  listAccounts: [Account!]!
}