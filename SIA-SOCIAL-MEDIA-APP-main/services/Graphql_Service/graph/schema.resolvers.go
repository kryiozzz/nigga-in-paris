package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"fmt" // Keep fmt for the panic messages
	"graphql/graph/model"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	// If you haven't implemented Todos, keep the panic. Otherwise, implement it here or remove.
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	// If you haven't implemented Todos, keep the panic. Otherwise, implement it here or remove.
	panic(fmt.Errorf("not implemented: Todos - todos"))
}

// Mutation returns MutationResolver implementation.
// This function connects the main Resolver struct to the mutationResolver struct.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
// This function connects the main Resolver struct to the queryResolver struct.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// mutationResolver struct type definition.
// Ensure this matches the type used in method receivers like CreatePost, FollowUser etc.
type mutationResolver struct{ *Resolver }

// queryResolver struct type definition.
// Ensure this matches the type used in method receivers like GetFeed, GetPost, GetAccount etc.
type queryResolver struct{ *Resolver }
